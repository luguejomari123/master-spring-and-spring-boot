spring initializer
start.spring.io

for rest api
in spring initializer go to add dependencies -> spring web

put @RestController annotation on Controller class
@RequestMapping("/courses") on method

spring boot starter projects
starters - convenient dependency descriptors for diff features

spring boot provides variety of starter projects
web application & rest api - spring boot starter web
unit tests- spring boot starter test
talk to database using jpa - spring boot starter data jpa
talk to database using jdbc - spring boot starter data jdbc
secure web app or rest api - spring boot starter security

spring boot dev tools
- auto restarts server for every code/property file change
- increase developer productivity, no need to manually restart server
- if pom.xml changed, need to manually restart
<dependency>
	<groupId>org.springframework.boot</groupId>
	<artifactId>spring-boot-devtools</artifactId>
</dependency>

Get production ready
1. Profiles
application.properties for different profiles
create application-<profilename>.properties file
in original application.properties file add spring.profiles.active=<profilename>

#sample currency-service-url 
2. ConfigurationProperties - for externalized configuration and easy access to properties defined in properties files
@ConfigurationProperties(prefix="currency-service")
add properties
private String url

3. Spring boot Embedded servers - simpler way to deploy application instead of using war file and app server
step 1: install java
step 2: run jar file

4. 